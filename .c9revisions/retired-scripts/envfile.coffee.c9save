{"ts":1380647108340,"silentsave":true,"restoring":false,"patch":[[]],"length":0}
{"contributors":[],"silentsave":false,"ts":1380647322886,"patch":[[{"diffs":[[1,"# Description:\r\n#   Set Hubot environent varibales.\r\n#   Limited to HUBOT_* for security.\r\n#   Write env vars to a file. \r\n#\r\n# Dependencies:\r\n#   None\r\n#\r\n# Configuration:\r\n#   FILE_BRAIN_PATH\r\n#\r\n# Commands:\r\n#   hubot setenv HUBOT_AWESOME true - set the environment variable HUBOT_AWESOME to true\r\n#   hubot getenv HUBOT_AWESOME      - return the value of the environment variable HUBOT_AWESOME\r\n#\r\n# Author:\r\n#   mikeumus\r\n#   pepijndevos - forefather of setenv script\r\n#   dustyburwell - forefather of file-brain script\r\n\r\nmodule.exports = (robot) ->\r\n  robot.respond /setenv (HUBOT_[A-Z_]+) (.*)/, (msg) ->\r\n    env = msg.match[1]\r\n    val = msg.match[2]\r\n    process.env[env] = val;\r\n    msg.reply \"Setting \" + env + \" to \" + val + \".\"\r\n\r\n  robot.respond /getenv (HUBOT_[A-Z_]+)/, (msg) ->\r\n    msg.reply(process.env[msg.match[1]])\r\n\r\n\r\n\r\nfs   = require 'fs'\r\npath = require 'path'\r\n\r\nmodule.exports = (robot) ->\r\n  brainPath = process.env.FILE_BRAIN_PATH or '/var/hubot'\r\n  brainPath = path.join brainPath, 'brain-dump.json'\r\n\r\n  try\r\n    data = fs.readFileSync brainPath, 'utf-8'\r\n    if data\r\n      robot.brain.mergeData JSON.parse(data)\r\n  catch error\r\n      console.log('Unable to read file', error) unless error.code is 'ENOENT'\r\n\r\n  robot.brain.on 'save', (data) ->\r\n    fs.writeFileSync brainPath, JSON.stringify(data), 'utf-8'"]],"start1":0,"start2":0,"length1":0,"length2":1342}]],"length":1342,"saved":false}
{"ts":1380647328154,"patch":[[{"diffs":[[0,"#   "],[-1,"Writ"],[1,"Sav"],[0,"e en"]],"start1":91,"start2":91,"length1":12,"length2":11}]],"length":1341,"saved":false}
{"ts":1380647350533,"patch":[[{"diffs":[[0,"#   "],[-1,"Save"],[1,"Modify"],[0," env"]],"start1":91,"start2":91,"length1":12,"length2":14},{"diffs":[[0,"nv vars "],[-1,"to"],[1,"from"],[0," a file."]],"start1":103,"start2":103,"length1":18,"length2":20}]],"length":1345,"saved":false}
{"ts":1380647538050,"patch":[[{"diffs":[[0,"ars "],[-1,"from a file."],[1,"via env.js"],[0," \r\n#"]],"start1":107,"start2":107,"length1":20,"length2":18},{"diffs":[[0,"\r\n\r\n"],[-1,"module.exports = (robot) ->"],[1,"fs   = require 'fs'\r\npath = require 'path'\r\n\r\nmodule.exports = (robot) ->\r\n  brainPath = process.env.FILE_BRAIN_PATH or '/var/hubot'\r\n  brainPath = path.join brainPath, 'env.js'"],[0,"\r\n  "]],"start1":525,"start2":525,"length1":35,"length2":185},{"diffs":[[0,"])\r\n"],[-1,"\r\n\r\n\r\nfs   = require 'fs'\r\npath = require 'path'\r\n\r\nmodule.exports = (robot) ->\r\n  brainPath = process.env.FILE_BRAIN_PATH or '/var/hubot'\r\n  brainPath = path.join brainPath, 'brain-dump.json'\r\n"],[1,"    "],[0,"\r\n  "]],"start1":987,"start2":987,"length1":202,"length2":12},{"diffs":[[0,"y(data), 'utf-8'"],[-1,""],[0,""],[1,"\r\n"]],"start1":1287,"start2":1287,"length1":16,"length2":18}]],"length":1305,"saved":false}
{"ts":1380648191905,"patch":[[{"diffs":[[0,"ire 'fs'"],[1," # file-brain"],[0,"\r\npath ="]],"start1":540,"start2":540,"length1":16,"length2":29},{"diffs":[[0,"e 'path'"],[1," # file-brain"],[0,"\r\n\r\nmodu"]],"start1":576,"start2":576,"length1":16,"length2":29},{"diffs":[[0,"r/hubot'"],[1," # file-brain"],[0,"\r\n  brai"]],"start1":679,"start2":679,"length1":16,"length2":29},{"diffs":[[0,"'env.js'"],[1," # file-brain"],[0,"\r\n  robo"]],"start1":737,"start2":737,"length1":16,"length2":29},{"diffs":[[0,")/, (msg) ->"],[1," # setenv"],[0,"\r\n    env = "]],"start1":803,"start2":803,"length1":24,"length2":33},{"diffs":[[0,"match[2]"],[1," "],[0,"\r\n    pr"]],"start1":864,"start2":864,"length1":16,"length2":17},{"diffs":[[0,"] = val;"],[1," "],[0,"\r\n    ms"]],"start1":894,"start2":894,"length1":16,"length2":17},{"diffs":[[0,"al + \".\""],[1," "],[0,"\r\n\r\n  ro"]],"start1":948,"start2":948,"length1":16,"length2":17},{"diffs":[[0,")/, (msg) ->"],[1," # setenv"],[0,"\r\n    msg.re"]],"start1":999,"start2":999,"length1":24,"length2":33},{"diffs":[[0,"tch[1]])"],[1," "],[0,"\r\n    \r\n"]],"start1":1054,"start2":1054,"length1":16,"length2":17},{"diffs":[[0," \r\n  try"],[1," # file-brain"],[0,"\r\n    da"]],"start1":1068,"start2":1068,"length1":16,"length2":29},{"diffs":[[0,"', (data) ->"],[-1,""],[0,""],[1,"  # file-brain"],[0,"\r\n    fs.wri"]],"start1":1315,"start2":1315,"length1":24,"length2":38}]],"length":1406,"saved":false}
{"ts":1380649423098,"patch":[[{"diffs":[[0,"obot) ->\r\n  "],[-1,"brain"],[1,"env"],[0,"Path = proce"]],"start1":620,"start2":620,"length1":29,"length2":27},{"diffs":[[0,"rain\r\n  "],[-1,"brain"],[1,"env"],[0,"Path = p"]],"start1":694,"start2":694,"length1":21,"length2":19},{"diffs":[[0,"th.join "],[-1,"brain"],[1,"env"],[0,"Path, 'e"]],"start1":714,"start2":714,"length1":21,"length2":19},{"diffs":[[0,"    "],[-1,"msg.reply \"Setting \" + env + \" to \" + val + \".\" \r\n\r\n  robot.respond /getenv (HUBOT_[A-Z_]+)/, (msg) -> # setenv\r\n    msg.reply(process.env[msg.match[1]])"],[1,"\r\n    # Check is file exists, if so, merge their data and write the new version of the file."],[0," \r\n    "],[-1,"\r\n  "],[0,"try "]],"start1":899,"start2":899,"length1":172,"length2":107},{"diffs":[[0,"file-brain\r\n"],[1,"    "],[0,"    data = f"]],"start1":1008,"start2":1008,"length1":24,"length2":28},{"diffs":[[0,"eadFileSync "],[-1,"brain"],[1,"env"],[0,"Path, 'utf-8"]],"start1":1039,"start2":1039,"length1":29,"length2":27},{"diffs":[[0,"ata)\r\n  "],[1," "],[1," "],[0,"catch er"]],"start1":1122,"start2":1122,"length1":16,"length2":18},{"diffs":[[0,"NOENT'\r\n"],[-1,"\r\n "],[1,"    \r\n    fs.writeFileSync envPath, JSON.stringify(data), 'utf-8'\r\n    msg.reply \"Setting \" + env + \" to \" + val + \".\" \r\n\r\n  robot.respond /getenv (HUBOT_[A-Z_]+)/, (msg) -> # setenv\r\n    msg.reply(process.env[msg.match[1]]) \r\n    \r\n\r\n  ###"],[0," robot.b"]],"start1":1216,"start2":1216,"length1":19,"length2":256},{"diffs":[[0,"ileSync "],[-1,"brain"],[1,"env"],[0,"Path, JS"]],"start1":1526,"start2":1526,"length1":21,"length2":19},{"diffs":[[0,"SON.stringify(data), 'utf-8'"],[1," ###"],[0,"\r\n"]],"start1":1544,"start2":1544,"length1":30,"length2":34}]],"length":1578,"saved":false}
{"ts":1380649892578,"patch":[[{"diffs":[[0,"h, 'utf-8'\r\n"],[1,"    "],[0,"    if data\r"]],"start1":1057,"start2":1057,"length1":24,"length2":28},{"diffs":[[0,"f data\r\n"],[1,"    "],[0,"      ro"]],"start1":1078,"start2":1078,"length1":16,"length2":20},{"diffs":[[0,"nvPath, "],[-1,"JSON.stringify("],[0,"data"],[-1,")"],[0,", 'utf-8"]],"start1":1260,"start2":1260,"length1":36,"length2":20},{"diffs":[[0," + \".\" \r"],[1,"\n    msg.reply \"Saving \" + env + \" to \" + val + \" in env.js\" \r"],[0,"\n\r\n  rob"]],"start1":1328,"start2":1328,"length1":16,"length2":78}]],"length":1632,"saved":false}
{"ts":1380692213305,"patch":[[{"diffs":[[0,"e-brain\r"],[1,"\n# env = require 'env'\r"],[0,"\n\r\nmodul"]],"start1":590,"start2":590,"length1":16,"length2":39}]],"length":1655,"saved":false}
{"contributors":[],"silentsave":false,"ts":1380695779909,"patch":[[{"diffs":[[0,"-brain\r\n"],[-1,"# "],[0,"env = re"]],"start1":591,"start2":591,"length1":18,"length2":16},{"diffs":[[0," 'env.js"],[1,"on"],[0,"' # file"]],"start1":751,"start2":751,"length1":16,"length2":18},{"diffs":[[0,"nvPath, "],[1,"JSON.stringify("],[0,"data"],[1,")"],[0,", 'utf-8"]],"start1":1283,"start2":1283,"length1":20,"length2":36},{"diffs":[[0,"n env.js"],[1,"on"],[0,"\" \r\n\r\n  "]],"start1":1426,"start2":1426,"length1":16,"length2":18}]],"length":1673,"saved":false}
{"ts":1380695905187,"patch":[[{"diffs":[[0,"ain\r"],[-1,"\nenv = require 'env'\r"],[0,"\n\r\nm"]],"start1":594,"start2":594,"length1":29,"length2":8}]],"length":1652,"saved":false}
